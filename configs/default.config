# Viper runner configuration file
# default preset - mostly to show off all options

# Only add one option per line.
# Options can be repeated.
# Some options take placeholders:
# 	@date@			the date and time (yyyy-mm-dd-hh-mm-ss) of the moment the benchmark was started.
#	@file_name@		the name of current input file
#	@path_name@		mashup of input file path and name to generate a unique name
#	@rep@			the current repetition of the same run configuration and file pair.
#	@config_name@	name of the current run configuration.

# Folder that contains the tests. Only .sil files will be respected.
test_folder ../silver/src/test/resources/all

# Tests can be ignored.
# Note that paths may be relative but cannot contain wildcards.
#ignore domains.sil
#ignore sequences\nil.sil

## Require user to confirm start of benchmark run/allow user to abort after having displayed
## information such as used configurations and total number of jobs to execute (default: 1)
# confirm_start 0

## Display all input files before benchmark run (default: 0)
# list_files 1

# Whether or not the output of underlying processes should be collected.
# The stdout ouput is written to stdout_file if the option is set, stdout otherwise.
# 
# The output file may contain any placeholder.
#print_process_output 1
#stdout_file results/@date@/output/@config_name@/@path_name@_stdout.txt
#stderr_file results/@date@/output/@config_name@/@path_name@_stderr.txt

# Add run configurations
#
# Run configurations can be named by supplying a config_name.
# The name is applied to the last mentionned run_configuration. The indendation for 'config_name' is optional.
# If no name is supplied, the name is simply 'run_config_n', where this config is the nth config.
#
# If run configurations are supplied all default ones get deleted and replaced by those listed in this file.
# Arguments get added to the last mentionned run_configuration. The indendation for 'arg' is optional.
# Arguments may contain any placeholder.
#
# Note: Timings are not reliable if the underlying process is doing a lot of IO work (e.g printing .bpl files)! 

#run_configuration ../carbon/carbon.bat
run_configuration ../carbon/carbon.bat
	config_name carbon_cvc4
	arg --boogieOpt /p:SOLVER=CVC4
#	arg --print boogie_files/@file@.bpl

# Number of repetitions for a single test file with the same run configuration.
repetitions 5

# Timeout in seconds for a single run for one input file.
# 0 or smaller values set the timeout to infinity.
timeout 10

# Name of the ouput files (csv) with timings.
# May contain the following placeholders: @date@
timing_csv results/@date@/timings.csv
per_config_timing_csv results/@date@/per_config_timings.csv
avg_per_config_timing_csv results/@date@/avg_per_config_timings.csv